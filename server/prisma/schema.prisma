// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  email     String  @unique
  password  String
  role      Roles
  admin     Admin?
  employee  Employee?
}
model Admin {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  age       String?
  dob       String?
  userId    String @db.ObjectId
  user      User     @relation(fields: [userId],references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  @@unique([userId])
}
model Employee {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  age       String?
  dob       String?
  department  String?
  salary      String?
  userId    String @db.ObjectId
  user      User     @relation(fields: [userId],references: [id],onDelete: Cascade)
  leaves    Leaves?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  @@unique([userId])
}
enum Roles {
  admin
  employee
}
model Leaves {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  type leaveTypes?
  description  String?
  empId   String @db.ObjectId @unique
  startDate  String?
  endDate    String?
  status    leaveStatus?  @default(pending)
  employee   Employee  @relation(fields: [empId] , references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
enum leaveStatus {
  pending
  approved
  cancelled
}
enum leaveTypes {
  casual
  medical
}
